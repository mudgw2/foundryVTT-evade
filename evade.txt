// Foundry VTT Script for Starfinder 1e Trick Attack
// Ensure the game object is available (it should be in Foundry VTT context)
if (typeof game === 'undefined' || !game.user) {
    console.error("Foundry VTT 'game' object not found or user not logged in. This script must be run within an active Foundry VTT session.");
}else{ 
      if(!canvas.tokens.controlled.length){
        //No token selected, send notice and stop
        ui.notifications.warn("You must have an character selected");
      }else{
        //const actor = canvas.tokens.controlled[0].document;
        const actor = canvas.tokens.controlled[0].actor;
        const target = game.user.targets.values().next().value.actor;

    if (game.user.targets.size > 0){
      (async () => {
        //const actor = canvas.tokens.controlled[0].actor;
        //This is the characters CL not the Targets...
        const CR = 20 + actor.system.details.cl.value;
        const DC = Math.floor(CR);
        const targetEAC = game.user.targets.values().next().value.actor.system.attributes.eac.value;
        const targetKAC = game.user.targets.values().next().value.actor.system.attributes.kac.value;
        const hasghost = 0;
        let level = 0;
        let expertise_die = '1d4';
        let text = DC;
        let ghostText;
        let ModifieddiceRoll = 0;
        const stealth = actor.system.skills?.ste.mod;
        const tokenName = target.name;
        const itemsArray = canvas.tokens.controlled[0].actor._source.items;
        const hasGhost = Number(!!token.actor.items.getName("Ghost"));
        const diceRoll = await new Roll("1d20").roll();
        ModifieddiceRoll = diceRoll.total + stealth + hasGhost;

       if (ModifieddiceRoll >= DC){ 
         // DC CHECK SUCCESS
        let modifiersArray = game.user.targets.values().next().value.actor.system;
        let effectArray = game.user.targets.values().next().value.actor.system.allModifiers.find(i=>i.name === "Flat-Footed");
        // console.log(effectArray);
        if (effectArray) {
            //Target is already flat-footed  
            ui.notifications.info(`${tokenName} is already Flat-Footed.`);
        }else{
            //Target isn't already flat-footed
            level = canvas.tokens.controlled[0].actor.system.details.level.value;
            await target.setCondition('flat-footed', true);
            //The path to the duration for Flat-Footed
            const flatFootedEffect = game.user.targets.first().actor.itemTypes.effect.find(i => i.name === "Flat-Footed");
            //Set for 1 round
            await flatFootedEffect.update({"system.activeDuration.unit": "round"});
            await flatFootedEffect.update({"system.activeDuration.value": 1});
            await flatFootedEffect.update({"system.activeDuration.expiryInit": 0});
            await flatFootedEffect.update({"system.activeDuration.total": 1});
            await flatFootedEffect.update({"system.activeDuration.string": "1 Round"});
            await flatFootedEffect.update({"system.activeDuration.turn": "origin"});
            await flatFootedEffect.update({"system.activeDuration.type": "turn"});

          if(level >= 3 && level <= 5){
            expertise_die = '1d8';
          }
          if(level > 5 && level <= 7){
            expertise_die = '3d8';
          }
          if(level > 7 && level <= 9){
            expertise_die = '4d8';
          }
          if(level > 9 && level <= 11){
            expertise_die = '5d8';
          }

          if(hasGhost){
            ghostText = '<div><small>@UUID[Compendium.sfrpg.class-features.Item.nJxXUlTGdZ7Lc5ms]{Ghost}</small></div>';
          }
          
          text =`<p>@UUID[Compendium.sfrpg.class-features.Item.MBNI94tbMoqizPUk]{Trick Attack (Ex)}</p><div style="background-color: green;color:white;weight:bold;padding:10px;border-radius: 5px;">
          <img src="systems/sfrpg/icons/conditions/flatfooted.webp" style="margin:0;max-width:30px;max-height:30px;padding-right:10px;float:left;" alt="Flat-Footed Condition Icon"/>STEALTH SUCCESS</div><div>
          ${ghostText}
          <div style="text-align:center;"><small>Roll:  <a class="inline-result" style="color:black"><i class="fas fa-dice-d20"></i> ${diceRoll.total} + ${stealth} + ${hasGhost} = ${ModifieddiceRoll}</small>
           <p><small><strong>${tokenName} is Flat-Footed</strong></p>
           <p><small><strong>Expertise Die: ${expertise_die}</strong></p>
           </div>
         </div><small style="float:right;text-align:right;width:50%;">Target DC: ${DC}</small>
         <p><small style="float:left;width:50%;">Target EAC: ${targetEAC} KAC: ${targetKAC}</small></p>
         `;
              ChatMessage.create({
                content: text,
              });
        }//
         
       	}else{
        // DC CHECK FAIL
        text = `<div style="background-color:red;color:white;weight:bold;padding:10px;border-radius: 5px;">
          <img src="systems/sfrpg/icons/conditions/flatfooted.webp" style="margin:0;max-width:30px;max-height:30px;padding-right:10px;float:left;" alt="Flat-Footed Condition Icon">STEALTH FAIL</div><div>
          
          <p><small><strong>${tokenName} Ignores the Stealth attempt.</strong></p><p>Roll:  <a class="inline-result" style="color:black"><i class="fas fa-dice-d20"></i> ${diceRoll.total} + ${stealth} + ${hasGhost} = ${ModifieddiceRoll}</small></p>
          <small style="float:right;text-align:right;width:50%;">Target DC: ${DC}</small>
          </div>`;
           ChatMessage.create({
                content: text
            });
        }   

})();// Async Roll
        
    }//targetedTokens.size
}//!actor
//canvas.tokens.releaseAll();
}//object check
